#
# spec file for package arangodb3
#
# Copyright (c) 2018 info@arangodb.org
#
# All modifications and additions to the file contributed by third parties
# remain the property of their copyright owners, unless otherwise agreed
# upon. The license for this file, and modifications and additions to the
# file, is the same license as for the pristine package itself (unless the
# license for the pristine package is not an Open Source License, in which
# case the license is the MIT License). An "Open Source License" is a
# license that conforms to the Open Source Definition (Version 1.9)
# published by the Open Source Initiative.

# Please submit bugfixes or comments via http://bugs.opensuse.org/

## -----------------------------------------------------------------------------
## --SECTION--                                                  global variables
## -----------------------------------------------------------------------------

%define _cfgdir %{_sysconfdir}/arangodb3
%define _databasedir %{_localstatedir}/lib/arangodb3
%define _appdir %{_localstatedir}/lib/arangodb3-apps
%define _logdir %{_localstatedir}/log/arangodb3
%define _piddir %{_localstatedir}/run/arangodb

## -----------------------------------------------------------------------------
## --SECTION--                                                      package data
## -----------------------------------------------------------------------------

Name:           arangodb3e
Version:        @PACKAGE_VERSION@
Release:        @PACKAGE_REVISION@
Summary:        The open-source, multi-model NoSQL database
License:        Apache-2.0
Group:          Productivity/Databases/Servers
Conflicts:	arangodb3, arangodb3-client, arangodb3e-client
Url:            https://www.arangodb.com
Vendor:         ArangoDB

%package client
Summary:        ArangoDB shell as stand-alone package
Group:          Productivity/Databases/Servers
Conflicts:	arangodb3e, arangodb3, arangodb3e-client

%debug_package

## -----------------------------------------------------------------------------
## --SECTION--                                                       description
## -----------------------------------------------------------------------------

%description
ArangoDB is a durable, reliable, transactional multi-model database. Its key-features are: joins, transaction, and flexible data modelling.

The ArangoDB consists of a server, a separate shell, which allows you to administrate the server, and a set of client APIs for various languages.

It is written in C/C++.


%description client
The ArangoDB shell as stand-alone program. It also contains the utility programs: arangobench (benchmark), arangorestore & arangodump (backup), arangoimp (import).

## -----------------------------------------------------------------------------
## --SECTION--                                                              prep
## -----------------------------------------------------------------------------

%prep
echo prep: We assume that all is prepared.

## -----------------------------------------------------------------------------
## --SECTION--                                                             build
## -----------------------------------------------------------------------------

%build
echo build: We assume that all is already built.

## -----------------------------------------------------------------------------
## --SECTION--                                                           install
## -----------------------------------------------------------------------------

%install
echo install:
mkdir -p %{buildroot}%{_databasedir}
mkdir -p %{buildroot}%{_appdir}
mkdir -p %{buildroot}%{_logdir}
mkdir -p %{buildroot}%{_piddir}
cp -a $INNERWORKDIR/ArangoDB/build/install/* %{buildroot}
# Move go executables out of the way to prevent debug info from being stripped:
mv %{buildroot}/usr/bin/arangodb /tmp
if [ -x %{buildroot}/usr/sbin/arangosync ] ; then
  mv %{buildroot}/usr/sbin/arangosync /tmp
fi

## -----------------------------------------------------------------------------
## --SECTION--                                                             check
## -----------------------------------------------------------------------------

%check
echo check: We assume that there is nothing to check.
# Move go executables back to where they belong:
mv /tmp/arangodb %{buildroot}/usr/bin/arangodb
if [ -x /tmp/arangosync ] ; then
  mv /tmp/arangosync %{buildroot}/usr/sbin/arangosync
fi

## -----------------------------------------------------------------------------
## --SECTION--                                                             files
## -----------------------------------------------------------------------------

%files
%defattr(-,root,root,0755)
/usr/share/doc/arangodb3/LICENSE.txt
/usr/share/doc/arangodb3/LICENSES-OTHER-COMPONENTS.md
/usr/share/doc/arangodb3/README.md
/usr/share/doc/arangodb3/README.txt

%attr(0755,arangodb,arangodb) %{_databasedir}
%attr(0755,arangodb,arangodb) %{_appdir}
%attr(0755,arangodb,arangodb) %{_logdir}

%ghost %attr(0755,arangodb,arangodb) %{_piddir}

%config(noreplace) %attr(-,arangodb,arangodb) %{_cfgdir}
%{_bindir}/*
%{_sbindir}/*
%{_mandir}/*/*
%{_datadir}/arangodb3

%files client
%defattr(-,root,root,0755)

# This is for arangobench.conf and arangobackup.conf (if the latter is present)
%config(noreplace) %{_cfgdir}/arangob*.conf
%config(noreplace) %{_cfgdir}/arangodump.conf
%config(noreplace) %{_cfgdir}/arangoexp*.conf
%config(noreplace) %{_cfgdir}/arangoimp*.conf
%config(noreplace) %{_cfgdir}/arangoinspect.conf
%config(noreplace) %{_cfgdir}/arangorestore.conf
%config(noreplace) %{_cfgdir}/arangosh.conf
%config(noreplace) %{_cfgdir}/arangovpack.conf
%config(noreplace) %{_cfgdir}/foxx-manager.conf
# This is for arangobench and arangobackup (if the latter is present)
%{_bindir}/arangob*
%{_bindir}/arangodump
%{_bindir}/arangoexp*
%{_bindir}/arangoimp*
%{_bindir}/arangoinspect
%{_bindir}/arangorestore
%{_bindir}/arangosh
%{_bindir}/arangovpack
%{_bindir}/foxx-manager
%{_mandir}/*/arangobench*
%{_mandir}/*/arangodump*
%{_mandir}/*/arangoimp*
%{_mandir}/*/arangorestore*
%{_mandir}/*/arangosh*
%{_datadir}/arangodb3/js@JS_DIR@/common
%{_datadir}/arangodb3/js@JS_DIR@/client
%{_datadir}/arangodb3/js@JS_DIR@/node
%{_datadir}/arangodb3/icudtl.dat

## -----------------------------------------------------------------------------
## --SECTION--                                                         changelog
## -----------------------------------------------------------------------------

%changelog

## -----------------------------------------------------------------------------
## --SECTION--                                                           scripts
## -----------------------------------------------------------------------------

%post
# $1 == 1: install
# $1 == 2: upgrade

if rpm -q --quiet systemd; then
  cp /usr/share/arangodb3/arangodb3.service %{_sysconfdir}/systemd/system/arangodb3.service
  systemctl daemon-reload
else
  cp /usr/share/arangodb3/arangodb3.initd %{_sysconfdir}/init.d/arangodb3
  chkconfig --level 2345 arangodb3 on
fi
cp /usr/share/arangodb3/arangodb3.logrotate %{_sysconfdir}/logrotate.d/arangodb3

echo "
ArangoDB 3 (https://www.arangodb.com)
  The multi-model NoSQL database: distributed free and open-source database
  with a flexible data model for documents, graphs, and key-values. Build
  high performance applications using a convenient SQL-like query language
  or JavaScript extensions.

First Steps with ArangoDB:
  https://www.arangodb.com/docs/stable/getting-started.html

Configuring the storage Engine:
  https://www.arangodb.com/docs/stable/programs-arangod-server.html#storage-engine

Configuration file:
  /etc/arangodb3/arangod.conf

Start ArangoDB shell client:
  > %{_bindir}/arangosh
"

if rpm -q --quiet systemd; then
echo "Start ArangoDB service:
  > systemctl start arangodb3.service

Enable ArangoDB service:
  > systemctl enable arangodb3.service
"
fi

# installing
if test "$1" -eq 1; then
  export ARANGODB_DEFAULT_ROOT_PASSWORD=`dd if=/dev/urandom bs=1024 count=1 2> /dev/null | md5sum | awk '{print $1}'`

  echo "SECURITY HINT:"
  echo "run 'arango-secure-installation' to set a root password"
  echo "the current password is '$ARANGODB_DEFAULT_ROOT_PASSWORD'"
  echo "(You should do this for a FRESH install! For an UPGRADE the password does not need to be changed)"

  /usr/sbin/arango-init-database --uid arangodb --gid arangodb --server.rest-server false --server.statistics false --foxx.queues false || true
fi

exit 0

%postun
# $1 == 0: uninstall
# $1 == 1: upgrade

# Upgrading
if test "$1" -eq 1; then
  /usr/sbin/arangod \
    --uid arangodb --gid arangodb \
    --server.rest-server false --log.foreground-tty false \
    --database.check-version

  if test "$?" -eq 11; then
    BACKUP="/var/lib/arangodb3-$(date +%F-%H-%M-%S)"
    cp -a /var/lib/arangodb3 "$BACKUP"
    /usr/sbin/arangod --server.rest-server false --log.level error --database.auto-upgrade

    if test "$?" -eq 0; then
      rm -rf "$BACKUP"
    fi
  fi

  if rpm -q --quiet systemd; then
    if test -f %{_localstatedir}/lib/rpm-state/arangodb3/restart; then
      rm -f %{_localstatedir}/lib/rpm-state/arangodb3/restart
      systemctl start arangodb3.service
    fi
  fi
fi
exit 0

%pre
# $1 == 1: install
# $1 == 2: upgrade

# create arangodb group only if it doesn't already exist
if ! getent group arangodb >/dev/null 2>&1; then
  /usr/sbin/groupadd -r arangodb
fi

# create arangodb user only if it doesn't already exist
if ! getent passwd arangodb >/dev/null 2>&1; then
  /usr/sbin/useradd -r -g arangodb --home %{_localstatedir}/arangodb arangodb
  /usr/sbin/usermod -c "Arango Server" arangodb
fi

# check if the arangodb group was added locally in /etc/group
# if not, then the arangod binary will very likely try to open a socket
# connection to nscd to query the group information from there.
# if there is no nscd running, starting the arangod binary will fail
if ! grep "^arangodb:" /etc/passwd >/dev/null; then
  if ! nscd -g >/dev/null 2>&1; then
    echo "Unable to query nscd service for user 'arangodb'. As a consequence, it is very likely that installing or starting the arangod server will fail because it can neither find user 'arangodb' in /etc/group nor via an nscd group lookup."
  fi
else
  if ! grep "^arangodb:" /etc/group >/dev/null; then
    if ! nscd -g >/dev/null 2>&1; then
      echo "Unable to query nscd service for group 'arangodb'. As a consequence, it is very likely that installing or starting the arangod server will fail because it can neither find user 'arangodb' in /etc/group nor via an nscd group lookup."
    fi
  fi
fi

# Upgrading
if test "$1" -eq 2; then
  if rpm -q --quiet systemd; then
    if test `systemctl show -p ActiveState arangodb3.service` = "ActiveState=active"; then
      mkdir -p %{_localstatedir}/lib/rpm-state/arangodb3
      touch %{_localstatedir}/lib/rpm-state/arangodb3/restart
      systemctl stop arangodb3.service
    fi
  fi
fi

exit 0

%preun
# $1 == 0: uninstall
# $1 == 1: upgrade

# upgrading
if test "$1" -eq 0; then
  if rpm -q --quiet systemd; then
    systemctl stop arangodb3
    rm -f %{_sysconfdir}/systemd/system/arangodb3.service
    systemctl daemon-reload
  else
    chkconfig --level 2345 arangodb3 off
    rm -f %{_sysconfdir}/init.d/arangodb3
  fi
  rm -f %{_sysconfdir}/logrotate.d/arangodb3
fi

exit 0
