#!/bin/bash
WD=$(dirname "$0")
# We are in Contents/MacOS. However everything is located under Contents/Resources
ROOTDIR=$(cd "$WD" && cd "../Resources" && pwd)
# create start script

ARANGOD_CONF_DIR="${HOME}/Library/ArangoDB-etc/"
ARANGOD_CONF="${ARANGOD_CONF_DIR}/arangod.conf"
mkdir -p "${HOME}/Library/ArangoDB/opt/arangodb/var/lib/arangodb3"
mkdir -p "${HOME}/Library/ArangoDB/opt/arangodb/var/log/arangodb3"
mkdir -p "${HOME}/Library/ArangoDB/opt/arangodb/var/lib/arangodb3-apps"

if test ! -f "${HOME}/Library/ArangoDB-etc"; then
    cp -R "${ROOTDIR}/opt/arangodb/etc/arangodb3" "${ARANGOD_CONF_DIR}/"
fi

# check for old PID file
PIDFILE="/var/tmp/arangod.pid"

if [ -f "${PIDFILE}" ];  then
result=$(
/usr/bin/osascript -s so <<-EOF
tell application "System Events"
  activate
  display dialog "PID File ${PIDFILE} exists, server already running. Press OK to try to start the server anyhow."
end tell
EOF
)

  if echo "$result" | grep -Fq "User canceled";  then
    exit 0
  fi
fi

# check for database engine

if test ! -f "${HOME}/Library/ArangoDB/opt/arangodb/var/lib/arangodb3/SERVER" -a ! -f "${HOME}/Library/ArangoDB/opt/arangodb/var/lib/arangodb3/ENGINE"; then
    STORAGE_ENGINE=$(
        /usr/bin/osascript <<-EOF
set issueList to {"auto", "rocksdb", "mmfiles"}
set selectedIssue to {choose from list issueList}
return selectedIssue
EOF
                  )

    if test "$STORAGE_ENGINE" == "false"; then
        STORAGE_ENGINE=auto
    fi

    sed -i -e "s;storage-engine = auto;storage-engine = $STORAGE_ENGINE;" "${ARANGOD_CONF}"
else
    if "${ROOTDIR}/arangod" -c "${ARANGOD_CONF}" --database.check-version true; then
        rm -f "${HOME}/Library/ArangoDB/opt/arangodb/var/lib/arangodb3/LOCK" # FIXME
        echo "database doesn't need an upgrade."
    else
        rm -f "${HOME}/Library/ArangoDB/opt/arangodb/var/lib/arangodb3/LOCK" # FIXME
        UPGRADE_DB=$(/usr/bin/osascript<<END
tell application "System Events"
activate
set the answer to the button returned of (display dialog "Do you want to upgrade your ArangoDB Database directory?" buttons {"Yes", "No"})
end tell
END
              )
        if test "${UPGRADE_DB}" == "Yes"; then
            echo "Updating the database ..."
            "${ROOTDIR}/arangod" --database.auto-upgrade -c "${ARANGOD_CONF}"
            rm -f "${HOME}/Library/ArangoDB/opt/arangodb/var/lib/arangodb3/LOCK" # FIXME
        else
            echo "Can't continue with not updated database."
            exit 1
        fi
    fi
fi

# start the server

"${ROOTDIR}/arangod" -c "${ARANGOD_CONF}" --daemon --pid-file "${PIDFILE}"

# create some information for the user

INFOFILE="/tmp/ArangoDB-CLI.info.$$"

(
  echo ""
  echo "ArangoDB server has been started"
  echo ""
  echo "The database directory is located at"
  echo "   '${HOME}/Library/ArangoDB/opt/arangodb/var/lib/arangodb3'"
  echo ""
  echo "The log file is located at"
  echo "   '${HOME}/Library/ArangoDB/opt/arangodb/var/log/arangodb3/arangod.log'"
  echo ""
  echo "You can access the server using a browser at 'http://127.0.0.1:8529/'"
  echo "or start the ArangoDB shell"
  echo "   '${ROOTDIR}/arangosh'"
  echo ""
  echo "Switching to log-file now, closing this window will NOT stop the server."
  echo ""
  echo ""
) > $INFOFILE

# start a Terminal.app session

/usr/bin/osascript <<-EOF
tell application "Terminal"
  do script "clear && cat $INFOFILE && rm $INFOFILE && sleep 20 && exec tail -1 -f ${HOME}/Library/ArangoDB/opt/arangodb/var/log/arangodb3/arangod.log"
  activate
end tell
EOF

# open web ui
sleep 10;
open "http://127.0.0.1:8529/"
